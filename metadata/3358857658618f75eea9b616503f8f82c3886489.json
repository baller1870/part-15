{"title":"Designing a Microsoft SharePoint 2010 Infrastructure (MS Course","uid":5980470,"size":56025834,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:3358857658618f75eea9b616503f8f82c3886489&amp;dn=Designing+a+Microsoft+SharePoint+2010+Infrastructure+%28MS+Course+&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":2,"leechers":0,"uploader":"Gaa1st","files":3,"time":1290576646,"description":"Programming in C# with Microsoft Visual Studio 2010. Vol 1-2. (MS Course 10266A)\nPublisher: Microsoft Press | 2010 | 648 + 896 pages | PDF | 54 MB\n\nAbout this Course\nThe course focuses on C# program structure, language syntax, and implementation detailswith .NET Framework 4.0. This course describes the new enhancements in the C# 4.0 language by using Visual Studio 2010.\n\nIn this course, lower-intermediate level programmers gain the knowledge and skills they need to develop C# applications for the Microsoft .NET Framework 4.0. The course highlights the structure of C# 4.0 programs, language syntax, and implementation details. This course is not mapped to any exam.\n\nAudience Profile\nThis course is intended for experienced developers who already have programming experience in C, C++, Visual Basic, or Java and understand the concepts of object-oriented programming.\nThis course is not designed for new programmers; it is targeted at professional developers with at least 12 months experience of programming in an object-oriented environment.\n\nAt Course Completion\nAfter completing this course, students will be able to:\n\n* Explain the purpose of the .NET Framework, and understand how to use C# and Visual Studio 2010 to build .NET Framework applications.\n* Understand the syntax of basic C# programming constructs.\n* Create and call methods in a C# application.\n* Catch, handle and throw exceptions.\n* Perform basic file IO operations in a C# application.\n* Create and use new types (enumerations, classes, and structures), and understand the differences between reference types and value types.\n* Control the visibility and lifetime of members in a type.\n* Use inheritance to create new reference types.\n* Manage the lifetime of objects and control the use of resources.\n* Define properties and indexers to encapsulate data, and define operators for this data.\n* Decouple an operation from the method that implements an operation, and use these decoupled operations to handle asynchronous events.\n* Use collections to aggregate data, and use Generics to implement type-safe collection classes, structures, interfaces, and methods.\n* Implement custom collection classes that support enumeration.\n* Query in-memory data by using LINQ.\n* Integrate code written by using a dynamic language such as Ruby and Python, or technologies such as COM, into a C# application\n\nCourse page: http://www.microsoft.com/learning/en/us/Course.aspx?ID=10266A\n","torrent":{"xt":"urn:btih:3358857658618f75eea9b616503f8f82c3886489","amp;dn":"Designing+a+Microsoft+SharePoint+2010+Infrastructure+%28MS+Course+","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"3358857658618f75eea9b616503f8f82c3886489","infoHashBuffer":{"type":"Buffer","data":[51,88,133,118,88,97,143,117,238,169,182,22,80,63,143,130,195,136,100,137]},"announce":[],"urlList":[]}}